version: '3.5'
services: 
  db_product: &db
    image: postgres:15.4-alpine3.18
    hostname: db_products
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: products
    ports:
      - "5432:5432"
    expose:
      - "5432"
    deploy:
      resources: 
        limits:
          cpus: "0.5"
          memory: "1GB"
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./scripts/postgres/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 25s
    command:
      [
        "postgres",
        "-c",
        "config_file=/docker-entrypoint-initdb.d/postgresql.conf",
      ]
  api_products01: &api
    build: ./Products.Cache.API
    hostname: api_products01
    environment:
      ASPNETCORE_URLS: http://+:80;http://+:81
      DB_PASS: postgres
      DB_USER: postgres
      DB_HOST: db_products
      DB_NAME: products
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_pass
      HOSTNAME: api_products01
    depends_on: 
      - db_product
      - redis
    expose:
      - 80
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: "0.5GB"

  api_products02:
    <<: *api
    hostname: api_products02
    environment:
      ASPNETCORE_URLS: http://+:80;http://+:81
      DB_PASS: postgres
      DB_USER: postgres
      DB_HOST: db_products
      DB_NAME: products
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_pass
      HOSTNAME: api_products02

  nginx_product: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./scripts/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api_products01
      - api_products02
      - db_product
      - redis
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.5GB'

  redis:
    image: redis:7.2-alpine3.18
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass redis_pass
    volumes:
      - redis-cache:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 20s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.25GB'

volumes:
  postgres-db:
  redis-cache:
    
networks:
  default:
    driver: bridge
    name: cache
      